{
  "name": "Phpbrew",
  "tagline": "Brew & manage PHP versions in pure PHP at HOME",
  "body": "PHPBrew\r\n=======\r\n\r\n*Read this in other languages:  [English](README.md), [Português - BR](README.pt-br.md), [日本語](README.ja.md).*\r\n\r\n[![Build Status](https://travis-ci.org/phpbrew/phpbrew.svg?branch=master)](https://travis-ci.org/phpbrew/phpbrew)\r\n[![Coverage Status](https://img.shields.io/coveralls/phpbrew/phpbrew.svg)](https://coveralls.io/r/phpbrew/phpbrew)\r\n[![Gitter](https://badges.gitter.im/phpbrew/phpbrew.svg)](https://gitter.im/phpbrew/phpbrew?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\r\n\r\nphpbrew builds and installs multiple version php(s) in your $HOME directory.\r\n\r\nWhat phpbrew can do for you:\r\n\r\n- Configure options are simplified into variants,  no worries about the path anymore!\r\n- Build php with different variants like PDO, mysql, sqlite, debug ...etc.\r\n- Compile apache php module and separate them by different versions.\r\n- Build and install php(s) in your home directory, so you don't need root permission.\r\n- Switch versions very easily and is integrated with bash/zsh shell.\r\n- Automatic feature detection.\r\n- Install & enable php extensions into current environment with ease.\r\n- Install multiple php into system-wide environment.\r\n- Path detection optimization for HomeBrew and MacPorts.\r\n\r\n<img width=\"600\" src=\"https://raw.github.com/phpbrew/phpbrew/master/screenshots/01.png\"/>\r\n\r\n## Requirement\r\n\r\nPlease see [Requirement](https://github.com/phpbrew/phpbrew/wiki/Requirement)\r\nbefore you get started. you need to install some development packages for\r\nbuilding PHP.\r\n\r\n## Installation\r\n\r\nJust download it:\r\n\r\n```bash\r\ncurl -L -O https://github.com/phpbrew/phpbrew/raw/master/phpbrew\r\nchmod +x phpbrew\r\n```\r\n\r\nThen you can install it into your bin folder:\r\n\r\n```sh\r\nsudo mv phpbrew /usr/local/bin/phpbrew\r\n```\r\n\r\nBe sure to have `/usr/local/bin` in your `$PATH` environment variable.\r\n\r\n\r\n## Setting up\r\n\r\nInit a bash script for your shell environment:\r\n\r\n```bash\r\n$ phpbrew init\r\n```\r\n\r\n*Add these lines to your `.bashrc` or `.zshrc` file*:\r\n\r\n```bash\r\n[[ -e ~/.phpbrew/bashrc ]] && source ~/.phpbrew/bashrc\r\n```\r\n\r\n### Setting up lookup prefix\r\n\r\nYou may setup your prefered default prefix for looking up libraries, available\r\noptions are `macports`, `homebrew`, `debian`, `ubuntu` or a custom path:\r\n\r\nFor Homebrew users:\r\n\r\n```bash\r\n$ phpbrew lookup-prefix homebrew\r\n```\r\n\r\nFor Macports users:\r\n\r\n```bash\r\n$ phpbrew lookup-prefix macports\r\n```\r\n\r\n## Basic usage\r\n\r\nTo list known versions:\r\n\r\n```bash\r\n$ phpbrew known\r\n7.0: 7.0.3, 7.0.2, 7.0.1, 7.0.0 ...\r\n5.6: 5.6.18, 5.6.17, 5.6.16, 5.6.15, 5.6.14, 5.6.13, 5.6.12, 5.6.11 ...\r\n5.5: 5.5.32, 5.5.31, 5.5.30, 5.5.29, 5.5.28, 5.5.27, 5.5.26, 5.5.25 ...\r\n5.4: 5.4.45, 5.4.44, 5.4.43, 5.4.42, 5.4.41, 5.4.40, 5.4.39, 5.4.38 ...\r\n5.3: 5.3.29, 5.3.28 ...\r\n```\r\n\r\nTo show more minor versions:\r\n\r\n```bash\r\n$ phpbrew known --more\r\n```\r\n\r\nTo update the release info:\r\n\r\n```bash\r\n$ phpbrew update\r\n```\r\n\r\nTo get older versions (less than 5.4)\r\n\r\n> Please note that we don't guarantee that you can build the php versions that\r\n> are not supported by offical successfully, please don't fire any issue about\r\n> the older versions, these issues won't be fixed.\r\n\r\n```bash\r\n$ phpbrew update --old\r\n```\r\n\r\nTo list known older versions (less than 5.4)\r\n\r\n```bash\r\n$ phpbrew known --old\r\n```\r\n\r\n## Starting Building Your Own PHP\r\n\r\nSimply build and install PHP with default variant:\r\n\r\n```bash\r\n$ phpbrew install 5.4.0 +default\r\n```\r\n\r\nHere we suggest `default` variant set, which includes most commonly used\r\nvariants, if you need a minimum install, just remove the `default` variant set.\r\n\r\nYou can enable parallel compilation by passing `-j` or `--jobs` option and\r\nthe following is an example:\r\n\r\n```bash\r\n$ phpbrew install -j $(nproc) 5.4.0 +default\r\n```\r\n\r\nWith tests:\r\n\r\n```bash\r\n$ phpbrew install --test 5.4.0\r\n```\r\n\r\nWith debug messages:\r\n\r\n```bash\r\n$ phpbrew -d install --test 5.4.0\r\n```\r\n\r\nTo install older versions (less than 5.3):\r\n\r\n```bash\r\n$ phpbrew install --old 5.2.13\r\n```\r\n\r\nTo install the next (unstable) version:\r\n\r\n```bash\r\n$ phpbrew install next as php-7.1.0\r\n```\r\n\r\nTo install from a github tag:\r\n```bash\r\n$ phpbrew install github:php/php-src@PHP-7.0 as php-7.0.0\r\n```\r\n\r\n## Cleaning up build directory\r\n\r\n```bash\r\n$ phpbrew clean php-5.4.0\r\n```\r\n\r\n## Variants\r\n\r\nPHPBrew arranges configure options for you, you can simply specify variant\r\nname, and phpbrew will detect include paths and build options for configuring.\r\n\r\nPHPBrew provides default variants and some virtual variants,\r\nto the default variants, which includes the most commonly used variants,\r\nto the virtual variants, which defines a variant set, you may use one virtual variant\r\nto enable multiple variants at one time.\r\n\r\nTo check out what is included in these variants, simply run `variants`\r\nsubcommand to list these variants:\r\n\r\n```bash\r\n$ phpbrew variants\r\nVariants:\r\n  all, apxs2, bcmath, bz2, calendar, cgi, cli, ctype, dba, debug, dom, embed,\r\n  exif, fileinfo, filter, fpm, ftp, gcov, gd, gettext, hash, iconv, icu,\r\n  imap, intl, ipc, ipv6, json, kerberos, mbregex, mbstring, mcrypt, mhash,\r\n  mysql, openssl, pcntl, pcre, pdo, pgsql, phar, posix, readline, session,\r\n  soap, sockets, sqlite, tidy, tokenizer, xml_all, xmlrpc, zip, zlib, gmp\r\n\r\n\r\nVirtual variants:\r\n  dbs:      sqlite, mysql, pgsql, pdo\r\n  mb:       mbstring, mbregex\r\n  neutral:\r\n  default:  filter, dom, bcmath, ctype, mhash, fileinfo, pdo, posix, ipc,\r\n            pcntl, bz2, zip, cli, json, mbstring, mbregex, calendar, sockets, readline,\r\n            xml_all\r\n\r\nUsing variants to build PHP:\r\n\r\n  phpbrew install 5.3.10 +default\r\n  phpbrew install 5.3.10 +mysql +pdo\r\n  phpbrew install 5.3.10 +mysql +pdo +apxs2\r\n  phpbrew install 5.3.10 +mysql +pdo +apxs2=/usr/bin/apxs2\r\n```\r\n\r\nTo enable one variant, simply add a prefix `+` before the variant name, eg\r\n\r\n    +mysql\r\n\r\nTo disable one variant, simply add a prefix `-` before the variant name.\r\n\r\n    -debug\r\n\r\nFor example, if we want to build PHP with the default options and\r\ndatabase supports (mysql, sqlite, postgresql), you may simply run:\r\n\r\n```bash\r\n$ phpbrew install 5.4.5 +default+dbs\r\n```\r\n\r\nYou may also build PHP with extra variants:\r\n\r\n```bash\r\n$ phpbrew install 5.3.10 +mysql+sqlite+cgi\r\n\r\n$ phpbrew install 5.3.10 +mysql+debug+pgsql +apxs2\r\n\r\n$ phpbrew install 5.3.10 +pdo +mysql +pgsql +apxs2=/usr/bin/apxs2\r\n```\r\n\r\nTo build PHP with pgsql (PostgreSQL) extension:\r\n\r\n```bash\r\n$ phpbrew install 5.4.1 +pgsql+pdo\r\n```\r\n\r\nOr build pgsql extension with postgresql base dir on Mac OS X:\r\n\r\n```bash\r\n$ phpbrew install 5.4.1 +pdo+pgsql=/opt/local/lib/postgresql91/bin\r\n```\r\n\r\nThe pgsql path is the location of `pg_config`, you could find `pg_config` in the /opt/local/lib/postgresql91/bin\r\n\r\n\r\nTo build PHP with neutral compile options, you can specify `neutral` virtual variant, which means that phpbrew\r\ndoesn't add any additional compile options including `--disable-all`. But some options(for example `--enable-libxml`)\r\nare still automatically added to support `pear`  installation.\r\nYou can build PHP with `neutral`:\r\n\r\n```bash\r\n$ phpbrew install 5.4.1 +neutral\r\n```\r\n\r\n\r\nFor more details, please check out [PHPBrew Cookbook](https://github.com/phpbrew/phpbrew/wiki).\r\n\r\n\r\n## Extra Configure Options\r\n\r\nTo pass extra configure arguments, you can do this:\r\n\r\n```bash\r\n$ phpbrew install 5.3.10 +mysql +sqlite -- \\\r\n    --enable-ftp --apxs2=/opt/local/apache2/bin/apxs\r\n```\r\n\r\n## Use And Switch\r\n\r\nUse (switch version temporarily):\r\n\r\n```bash\r\n$ phpbrew use 5.4.22\r\n```\r\n\r\nSwitch PHP version (switch default version)\r\n\r\n```bash\r\n$ phpbrew switch 5.4.18\r\n```\r\n\r\nTurn Off:\r\n\r\n```bash\r\n$ phpbrew off\r\n```\r\n\r\nIf you enable apache PHP modules, remember to comment out or remove the settings.\r\n\r\n```bash\r\n$ sudo vim /etc/httpd/conf/httpd.conf\r\n# LoadModule php5_module        /usr/lib/httpd/modules/libphp5.3.21.so\r\n# LoadModule php5_module        /usr/lib/httpd/modules/libphp5.3.20.so\r\n```\r\n\r\n## List installed PHP\r\n\r\n```bash\r\n$ phpbrew list\r\n```\r\n\r\n\r\n\r\n## The Extension Installer\r\n\r\nYou can also install PHP extension with ease, either the extensions shipped\r\nwith PHP source code or even from PECL.\r\n\r\nIf the extension directory is found in PHP source, PHPBrew automatically switch into\r\nthe PHP source directory and install the extension.\r\n\r\nIf the extension directory is not found in PHP source, PHPBrew fetch the extension\r\npackage from PECL <http://pecl.php.net>.\r\n\r\nPHPBrew also creates extension config to enable the installed extension, so you\r\ndon't need to write the config file to enable it by hands. The extension config\r\ndirectory is in:\r\n\r\n    ~/.phpbrew/php/php-{version}/var/db\r\n\r\n### Installing Extension - The Most Simple Way\r\n\r\nBefore you install any PHP extension, you should set your current running php:\r\n\r\n```bash\r\n$ phpbrew use php-5.5.6\r\n```\r\n\r\nThen run `ext install` to install the extensions\r\n\r\n```bash\r\n$ phpbrew ext install apcu\r\n$ phpbrew ext install memcache\r\n```\r\n\r\n### Installing Extension With Stability\r\n\r\nTo install extensions with stability tag:\r\n\r\n```bash\r\n$ phpbrew ext install xdebug stable\r\n$ phpbrew ext install xdebug latest\r\n$ phpbrew ext install xdebug beta\r\n```\r\n\r\nTo install extensions with version name:\r\n\r\n```bash\r\n$ phpbrew ext install xdebug 2.0.1\r\n```\r\n\r\n### Showing extension config options\r\n\r\nTo see if there are some configure options to build the extension, you can use\r\nthe `ext show` command. Please note that the `show` command only works for\r\nbuilt-in extensions:\r\n\r\n```bash\r\nphpbrew ext show apcu\r\n```\r\n\r\n### Install extensions with customized options:\r\n\r\n```bash\r\n$ phpbrew ext install yaml -- --with-yaml=/opt/local\r\n```\r\n\r\n### Installing Extension from GitHub\r\n\r\nThe special prefix `github:` tells phpbrew to get the extension repository from\r\n`php-memcached-dev/phpmemcached` and branch `php7`\r\n\r\n```bash\r\n$ phpbrew ext install github:php-memcached-dev/php-memcached php7 -- --disable-memcached-sasl\r\n```\r\n\r\n### Installing Extension with specific downloader\r\n\r\nRight now, phpbrew supports 4 different downloader implementation:\r\n\r\n- `php_curl` - download files using the built-in php curl extension.\r\n- `php_stream` - download files using the built-in php stream wrapper.\r\n- `curl`\r\n- `wget`\r\n\r\nIt's possible to replace the default downloader with your preference:\r\n\r\n    phpbrew ext install --downloader php_curl apcu\r\n\r\nThe curl php extension based downloader supports User-Agent and Proxy Settings,\r\nthus you can do this if you encountered some network issues:\r\n\r\n    phpbrew ext install --download php_curl --http-proxy=... --http-proxy-auth=... apcu\r\n\r\n\r\n### Enabling Extension\r\n\r\nYou can also install extension via PECL and enable it manually:\r\n\r\n```bash\r\npecl install mongo\r\nphpbrew ext enable mongo\r\n```\r\n\r\nThe `ext enable` command allows you to create a config {current php base}/var/db/{extension name}.ini\r\nto enable the extension.\r\n\r\n\r\n### Configuring the php.ini for current php version\r\n\r\nSimply run:\r\n\r\n```bash\r\n$ phpbrew config\r\n```\r\n\r\nYou may specify the EDITOR environment variable to your favorite editor:\r\n\r\n```bash\r\nexport EDITOR=vim\r\nphpbrew config\r\n```\r\n\r\n## Upgrade phpbrew\r\n\r\nTo upgrade phpbrew, you may simply run the `self-update` command,\r\nthis command enables you to install the latest version of\r\n`master` branch from GitHub:\r\n\r\n```bash\r\n$ phpbrew self-update\r\n```\r\n\r\n## The Installed PHP(s)\r\n\r\nThe installed phps are located in `~/.phpbrew/php`, for example, php 5.4.20 is located at:\r\n\r\n    ~/.phpbrew/php/5.4.20/bin/php\r\n\r\nAnd you should put your configuration file in:\r\n\r\n    ~/.phpbrew/php/5.4.20/etc/php.ini\r\n\r\nExtension configuration files should be put in:\r\n\r\n    ~/.phpbrew/php/5.4.20/var/db\r\n    ~/.phpbrew/php/5.4.20/var/db/xdebug.ini\r\n    ~/.phpbrew/php/5.4.20/var/db/apc.ini\r\n    ~/.phpbrew/php/5.4.20/var/db/memcache.ini\r\n    ... etc\r\n\r\n## Quick commands to switch between directories\r\n\r\nSwitching to PHP build directory\r\n\r\n```bash\r\n$ phpbrew build-dir\r\n```\r\n\r\nSwitching to PHP dist directory\r\n\r\n```bash\r\n$ phpbrew dist-dir\r\n```\r\n\r\nSwitching to PHP etc directory\r\n\r\n```bash\r\n$ phpbrew etc-dir\r\n```\r\n\r\nSwitching to PHP var directory\r\n\r\n```bash\r\n$ phpbrew var-dir\r\n```\r\n\r\n## PHP FPM\r\n\r\nphpbrew also provides useful fpm managing sub-commands. to use them, please\r\nremember to enable `+fpm` variant when building your own php.\r\n\r\nTo start php-fpm, simply type:\r\n\r\n```bash\r\n$ phpbrew fpm start\r\n```\r\n\r\nTo stop php-fpm, type:\r\n\r\n```bash\r\n$ phpbrew fpm stop\r\n```\r\n\r\nTo show php-fpm modules:\r\n\r\n```bash\r\nphpbrew fpm module\r\n```\r\n\r\nTo test php-fpm config:\r\n\r\n```bash\r\nphpbrew fpm test\r\n```\r\n\r\nTo edit php-fpm config:\r\n\r\n```bash\r\nphpbrew fpm config\r\n```\r\n\r\n> The installed `php-fpm` is located in `~/.phpbrew/php/php-*/sbin`.\r\n>\r\n> The correspond `php-fpm.conf` is lcoated in `~/.phpbrew/php/php-*/etc/php-fpm.conf.default`,\r\n> you may copy the default config file to the desired location. e.g.,\r\n>\r\n>     cp -v ~/.phpbrew/php/php-*/etc/php-fpm.conf.default\r\n>         ~/.phpbrew/php/php-*/etc/php-fpm.conf\r\n>\r\n>     php-fpm --php-ini {php config file} --fpm-config {fpm config file}\r\n\r\n\r\n## Installing Extra Apps\r\n\r\nphpbrew provides app command to fetch some php apps.\r\n\r\n### Installing composer\r\n\r\n```bash\r\n$ phpbrew app get composer\r\n```\r\n\r\n### Installing phpunit\r\n\r\n```bash\r\nphpbrew app get phpunit\r\n```\r\n\r\n## Enabling Version Info Prompt\r\n\r\nTo add PHP version info in your shell prompt, you can use\r\n`\"PHPBREW_SET_PROMPT=1\"` variable.\r\n\r\nThe default is `\"PHPBREW_SET_PROMPT=0\"` (disable). To enable it, you can add this\r\nline to your `~/.bashrc` file and put this line before you source\r\n`~/.phpbrew/bashrc`.\r\n\r\n```bash\r\nexport PHPBREW_SET_PROMPT=1\r\n```\r\n\r\nTo embed version info in your prompt, you can use\r\n`phpbrew_current_php_version` shell function, which is defined in `.phpbrew/bashrc`.\r\nand you can set the version info in your `PS1` var.\r\ne.g.\r\n\r\n```bash\r\nPS1=\" \\$(phpbrew_current_php_version) \\$ \"\r\n```\r\n\r\nKnown Issues\r\n------------\r\n\r\n- For PHP-5.3+ versions, \"Building intl 64-bit fails on OS X\" <https://bugs.php.net/bug.php?id=48795>\r\n\r\n- To build PHP with GD extension, you need to specify your libpng dir and libjpeg dir, for example,\r\n\r\n    $ phpbrew install php-5.4.10 +default +mysql +intl +gettext +apxs2=/usr/bin/apxs2 \\\r\n        -- --with-libdir=lib/x86_64-linux-gnu \\\r\n           --with-gd=shared \\\r\n           --enable-gd-natf \\\r\n           --with-jpeg-dir=/usr \\\r\n           --with-png-dir=/usr\r\n\r\n\r\n\r\n\r\nTroubleshooting\r\n-------------------\r\nPlease see [TroubleShooting](https://github.com/phpbrew/phpbrew/wiki/TroubleShooting)\r\n\r\nFAQ\r\n-------------------------\r\n\r\nQ: How do I have the same version with different compile option?\r\n\r\nA: Currently, you can install php5.x.x and rename the /Users/phpbrew/.phpbrew/php/php-5.x.x folder to the new name, for example, php-5.x.x-super , and install another php-5.3.3\r\n\r\n\r\n\r\nContribution\r\n------------------\r\nPlease see [Contribution](https://github.com/phpbrew/phpbrew/wiki/Contribution)\r\n\r\n\r\nDocumentation\r\n-------------\r\nPlease see [Wiki](https://github.com/phpbrew/phpbrew/wiki)\r\n\r\n\r\n\r\nAuthor\r\n------\r\n\r\n- Yo-An Lin (c9s)  <yoanlin93 _at_ gmail.com>\r\n- Márcio Almad <marcio3w _at_ gmail.com>\r\n\r\nLicense\r\n--------\r\n\r\nSee [LICENSE](LICENSE) file.\r\n\r\n\r\n\r\n[t-link]: https://travis-ci.org/phpbrew/phpbrew \"Travis Build\"\r\n[s-link]: https://scrutinizer-ci.com/g/phpbrew/phpbrew/?branch=master \"Code Quality\"\r\n[p-link]: https://packagist.org/packages/marc/phpbrew \"Packagist\"\r\n[sl-link]: https://insight.sensiolabs.com/projects/02d1fd01-8a70-4fe4-a550-381a3c0e33f3 \"Sensiolabs Insight\"\r\n[c-badge]: https://coveralls.io/repos/phpbrew/phpbrew/badge.png?branch=master\r\n",
  "google": "UA-2196512-14",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}